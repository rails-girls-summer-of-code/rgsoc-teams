= simple_nested_form_for [:organizers, @team], wrapper: :horizontal_form, html:{class:'form-horizontal'} do |f|
  - if @team.errors.any?
    #error_explanation
      h2 = "#{pluralize(@team.errors.count, "error")} prohibited this team from being saved:"
      ul
        - @team.errors.full_messages.each do |message|
          li = message

  p.help-block
    Please see the #{link_to 'Help section', page_path('help'), target: '_blank'} for information about teams.
  = f.input :name, placeholder: 'Any name you like ...', label: 'Team Name'
  .form-group
    label.control-label.col-sm-3 Remain hidden
    .col-sm-9
      .checkbox
        label
          = f.check_box :invisible
          |  Your team will not be listed in the teams overview until it is accepted for RGSoC.

  .page-header
    h2 Members
  fieldset
    = f.simple_fields_for :roles do |r|
      = r.input :github_handle, required: false
      / = r.input :name, as: :radio_buttons, collection: accessible_roles.map { |r| [r.capitalize, r] }, required: false, label: false
      .form-group
        label.control-label.col-sm-3 Team Member Role
        .col-sm-9
          - accessible_roles.each do |role|
            .radio
              label
                = r.radio_button :name, role, required: true
                = role.capitalize
          .form-btn-group
            = r.link_to_remove 'Remove team member', class: 'btn btn-default'
  .form-group.form-btn-group
    = f.link_to_add 'Add another member', :roles, class: 'btn btn-primary col-sm-offset-3'

  = f.association :project, label: 'Project', collection: Project.in_season(@team.season).accepted, prompt: 'Choose a Project'

  = f.input :github_handle, placeholder: '', hint: 'Should your team have an organization'
  = f.input :twitter_handle, placeholder: '@', hint: 'Should your team have one'
  = f.input :description, label: 'Introduction', placeholder: 'Tell the world about your team (eg. about the project you will be working on)', input_html: { rows: 10 }, hint: "This is just for your public team profile. You can use basic #{link_to 'Markdown', "https://en.wikipedia.org/wiki/Markdown", target: :blank} here.".html_safe

  = f.input :kind, collection: Team::KINDS.map { |k| [k.capitalize, k] }, include_blank: true, label: 'Team Type'
  = f.input :starts_on,   discard_year: true, order: [:day, :month], input_html: { class: 'short' }, default: Season.current.starts_at
  = f.input :finishes_on, discard_year: true, order: [:day, :month], input_html: { class: 'short' }, default: Season.current.ends_at
  - if can? :read, :users_info
    = f.input :post_info, label: 'Blog post info'

  .page-header
    h2 Sources

  p.help-block
    | We will aggregate activities for all teams on the Activity page. Sources
      are where these activities are coming from. Blogs must have an RSS/Atom feed (discoverable through an alternate link tag).
      Please make sure to add at least your team log feed and repositories that
      you are working on:

  fieldset
    = f.simple_fields_for :sources do |s|
      = s.input :url, required: true, label: 'URL'
      / = s.input :kind, as: :radio_buttons, collection: Source::KINDS.map { |k| [k.capitalize, k] }, required: false, label: false
      .form-group
        label.control-label.col-sm-3 Type
        .col-sm-9
          - Source::KINDS.each do |kind|
            .radio
              label
                = s.radio_button :kind, kind, required: true
                = kind.capitalize
          .form-btn-group
            = s.link_to_remove 'Remove', class: 'btn btn-default'
    .form-group.form-btn-group
      = f.link_to_add 'Add another source', :sources, class: 'btn btn-primary col-sm-offset-3'

  - if admin?
    = f.input :season_id, as: :select, collection: Season.order('name DESC') { |e| [s.name, s.id] }
  - if f.object.accepted?
    = render 'teams/conference_preference_fields', f: f
//  .page-header
    //h3 Conference Offers
    //.conference-info
      | Please select one or more conferences free tickets to which you would like to offer to the students.
    //fieldset
      = f.simple_fields_for :conference_attendances do |c|
        = c.input :conference_id, collection: @conferences&.group_by(&:region), as: :grouped_select, group_method: :last, label: "Offered conference", include_blank: "None"
        = c.input :orga_comment, label: "Comment"

      .form-group.form-btn-group
      = f.link_to_add 'Add another conference offer', :conference_attendances, class: 'btn btn-primary col-sm-offset-3'

  //.actions
    ul.list-inline
      li = f.submit 'Save', class: 'btn btn-success'
      li = link_to 'Cancel', [:organizers, @team], class: 'btn btn-default'
